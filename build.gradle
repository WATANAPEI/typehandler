buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "com.avast.gradle:gradle-docker-compose-plugin:0.16.11"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.avast.gradle.docker-compose'


group = 'dev.wpei'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-mysql'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

bootJar {
	archiveFileName = 'app.jar'
}

task myDockerComposeUp(type: Exec) {
	logger.info("whoami: " + "whoami".execute().text)
	logger.info("printenv: " + "printenv".execute().text)
	commandLine "docker", "compose", "up", "-d"

}

bootRun {
	dependsOn myDockerComposeUp
}
